name:                cl-benchmark
version:             2.0.0.0
synopsis:            A collection of more or less efficient algorithms for simplifying finite automata and proving their equivalence.
description:         Please see README.md
homepage:            https://github.com/koflerdavid/nfa-equivalence-code#readme
license:             BSD3
license-file:        LICENSE
author:              David Kofler
maintainer:          D.Kofler@student.uibk.ac.at
copyright:           2016 David Kofler
category:            Algorithms
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.22

executable benchmark
  default-language:    Haskell2010
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -O2 -Wall

  hs-source-dirs:      app
  main-is:             Main.hs
  other-modules:       AutomataOutput
                     , Interpolator
                     , RandomNfa

  build-depends:       base
                     , containers
                     , cl-automata
                     , criterion
                     , deepseq
                     , graphviz
                     , MonadRandom
                     , optparse-generic
                     , random
                     , text
                     , time
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4

source-repository head
  type:     git
  location: https://github.com/koflerdavid/nfa-equivalence-code
