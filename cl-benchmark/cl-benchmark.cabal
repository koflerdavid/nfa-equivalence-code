name:                cl-benchmark
version:             2.0.0.0
synopsis:            A collection of more or less efficient algorithms for simplifying finite automata and proving their equivalence.
description:         Please see README.md
homepage:            https://github.com/koflerdavid/nfa-equivalence-code#readme
bug-reports:         https://github.com/koflerdavid/nfa-equivalence-code/issues
license:             BSD3
license-file:        LICENSE
author:              David Kofler
maintainer:          D.Kofler@student.uibk.ac.at
copyright:           2016-2018 David Kofler
category:            Algorithms
build-type:          Simple
cabal-version:       >= 2

benchmark automata-equivalence
  type:                exitcode-stdio-1.0
  default-language:    Haskell2010
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -O2 -Wall

  hs-source-dirs:      app
  main-is:             Main.hs
  other-modules:       AutomataOutput
                     , Interpolator
                     , RandomNfa

  build-depends:       base
                     , containers
                     , cl-automata      >= 2.0
                     , criterion
                     , deepseq
                     , graphviz
                     , MonadRandom
                     , optparse-generic
                     , random
                     , text

source-repository this
  type:              git
  location:          https://github.com/koflerdavid/nfa-equivalence-code
  tag:               v2.0
  subdir:            cl-benchmark

source-repository head
  type:              git
  location:          https://github.com/koflerdavid/nfa-equivalence-code
  subdir:            cl-benchmark
