name:                cl-regex-tool
version:             2.0.0.0
synopsis:            A collection of more or less efficient algorithms for simplifying finite automata and proving their equivalence.
description:         Please see README.md
homepage:            https://github.com/koflerdavid/nfa-equivalence-code#readme
bug-reports:         https://github.com/koflerdavid/nfa-equivalence-code/issues
license:             BSD3
license-file:        LICENSE
author:              David Kofler
maintainer:          D.Kofler@student.uibk.ac.at
copyright:           2016-2018 David Kofler
category:            Algorithms
build-type:          Simple
cabal-version:       >= 2

executable regex-derivation
  default-language:    Haskell2010
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
                       -O2 -Wall -Wcompat
                       -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints

  hs-source-dirs:      app
  main-is:             Main.hs
  other-modules:       RegexDerivation
                     , RegexEquivalence
                     , RegexFullDerivation
                     , RegexDfaOutput.LaTeX
                     , RegexDfaOutput.Tsv
                     , RegexDfaOutput.Html
                     , Types

  build-depends:       base
                     , cl-regexes       >= 2.0
                     , containers
                     , HaTeX
                     , optparse-generic
                     , safe-exceptions
                     , text

source-repository this
  type:              git
  location:          https://github.com/koflerdavid/nfa-equivalence-code
  tag:               v2.0
  subdir:            cl-regex-tool

source-repository head
  type:              git
  location:          https://github.com/koflerdavid/nfa-equivalence-code
  subdir:            cl-regex-tool
