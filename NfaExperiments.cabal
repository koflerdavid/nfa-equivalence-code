name:                NfaExperiments
version:             0.2.0.0
synopsis:            A collection of more or less efficient algorithms for simplifying finite automata and proving their equivalence.
description:         Please see README.md
homepage:            https://github.com/koflerdavid/nfa-equivalence-code#readme
license:             BSD3
license-file:        LICENSE
author:              David Kofler
maintainer:          D.Kofler@student.uibk.ac.at
copyright:           2016 David Kofler
category:            Algorithms
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.22

library
  hs-source-dirs:      src
  ghc-options:         -Wall
  exposed-modules:     Algorithm.AutomataMerge
                     , Algorithm.DfaEquivalence
                     , Algorithm.NfaEquivalence
                     , Algorithm.Regex.Derivation
                     , Compiler.Hknt
                     , Compiler.Regex
                     , Data.Dfa
                     , Data.EpsilonNfa
                     , Data.EpsilonNfa.Internal
                     , Data.Nfa
                     , Data.Queue
                     , Data.Regex
                     , Data.CongruenceClosure
                     , Data.CongruenceClosure.Internal
                     , Language.Automata.HkntParser
                     , Language.Automata.HkntParser.Class
                     , Language.Automata.HkntParser.Internal
                     , Language.Automata.HkntParser.Tokeniser
                     , Language.RegexParser
                     , Language.RegexParser.Class
                     , Language.RegexParser.Tokeniser
  build-depends:       base >= 4.7 && < 5
                     , containers
                     , either
                     , equivalence
                     , parsec >= 3 && < 4
                     , transformers
  default-language:    Haskell2010

executable automata-equivalence
  hs-source-dirs:      app-automata-equivalence
  main-is:             Main.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  build-depends:       base
                     , containers
                     , NfaExperiments
                     , optparse-generic
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4
  other-modules:       DfaChecking
                     , NfaChecking
  default-language:    Haskell2010

executable regex-derivation
  hs-source-dirs:      app-regex-derivation
  main-is:             Main.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  build-depends:       base
                     , containers
                     , HaTeX
                     , NfaExperiments
                     , optparse-generic
                     , text
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4
  other-modules:       RegexFullDerivation
  default-language:    Haskell2010

test-suite NfaExperiments-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       base >= 4.7 && < 5
                     , hspec
                     , hspec-discover
                     , QuickCheck
                     , NfaExperiments
                     , containers
                     , equivalence
                     , parsec >= 3 && < 4
                     , transformers
  other-modules:       Algorithm.AutomataMergeSpec
                     , Algorithm.DfaEquivalenceSpec
                     , Algorithm.NfaEquivalenceSpec
                     , Algorithm.Regex.DerivationSpec
                     , Compiler.HkntSpec
                     , Compiler.RegexSpec
                     , Data.DfaSpec
                     , Data.EpsilonNfaSpec
                     , Data.EpsilonNfa.InternalSpec
                     , Data.NfaSpec
                     , Data.EquivalenceSpec
                     , Data.CongruenceClosureSpec
                     , HkntSamples
                     , Language.Automata.HkntParserSpec
                     , Language.Automata.HkntParser.InternalSpec
                     , Language.Automata.HkntParser.TokeniserSpec
                     , Language.RegexParserSpec
                     , Language.RegexParser.TokeniserSpec
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/koflerdavid/nfa-equivalence-code
