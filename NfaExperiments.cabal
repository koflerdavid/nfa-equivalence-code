name:                NfaExperiments
version:             0.8.0.0
synopsis:            A collection of more or less efficient algorithms for simplifying finite automata and proving their equivalence.
description:         Please see README.md
homepage:            https://github.com/koflerdavid/nfa-equivalence-code#readme
license:             BSD3
license-file:        LICENSE
author:              David Kofler
maintainer:          D.Kofler@student.uibk.ac.at
copyright:           2016 David Kofler
category:            Algorithms
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.22

library
  hs-source-dirs:      src
  ghc-options:         -Wall -O2

  exposed-modules:     Algorithm.AutomataMerge
                     , Algorithm.DfaEquivalence
                     , Algorithm.NfaEquivalence
                     , Algorithm.Regex.Derivation
                     , Algorithm.Regex.Equivalence
                     , Compiler.Hknt
                     , Compiler.Regex
                     , Data.Dfa
                     , Data.Dfa.Format.Html
                     , Data.Dfa.Regex
                     , Data.EpsilonNfa
                     , Data.EpsilonNfa.Internal
                     , Data.FiniteAutomaton
                     , Data.Nfa
                     , Data.Queue
                     , Data.Regex
                     , Algorithm.Regex.DfaConversion
                     , Data.CongruenceClosure
                     , Data.CongruenceClosure.Internal
                     , Language.Automata.HkntParser
                     , Language.Automata.HkntParser.Class
                     , Language.Automata.HkntParser.Internal
                     , Language.Automata.HkntParser.Tokeniser
                     , Language.RegexParser
                     , Language.RegexParser.Class
                     , Language.RegexParser.Internal
                     , Language.RegexParser.Tokeniser

  build-depends:       base >= 4.7 && < 5
                     , containers
                     , either
                     , equivalence
                     , lucid
                     , parsec >= 3 && < 4
                     , text
                     , transformers

  default-language:    Haskell2010

executable automata-equivalence
  hs-source-dirs:      app-automata-equivalence
  main-is:             Main.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -Wall

  build-depends:       base
                     , containers
                     , NfaExperiments
                     , optparse-generic
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4

  other-modules:       DfaChecking
                     , NfaChecking
                     , Util

  default-language:    Haskell2010

executable regex-derivation
  hs-source-dirs:      app-regex-derivation
  main-is:             Main.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -Wall
  build-depends:       base
                     , containers
                     , HaTeX
                     , lucid
                     , NfaExperiments
                     , optparse-generic
                     , text
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4

  other-modules:       RegexDerivation
                     , RegexEquivalence
                     , RegexFullDerivation
                     , RegexDfaOutput.LaTeX
                     , RegexDfaOutput.Tsv
                     , RegexDfaOutput.Html
                     , Types

  default-language:    Haskell2010

executable website
  hs-source-dirs:      website
  default-language:    Haskell2010
  default-extensions:  OverloadedStrings
  main-is:             Main.hs
  other-modules:       Actions.Derivation
                     , Actions.FiniteAutomataEquivalence
                     , Actions.RegexEquivalence
                     , Actions.RegexToDfaConversion
  build-depends:
                       base                      >= 4     && < 5
                     , bytestring                >= 0.9.1 && < 0.11
                     , aeson
                     , containers
                     , either
                     , snap-core                 >= 1.0   && < 1.1
                     , snap-server               >= 1.0   && < 1.1
                     , text
                     , utf8-string
                     , NfaExperiments

  if impl(ghc >= 6.12.0)
    ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                 -fno-warn-unused-do-bind
  else
    ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2

executable benchmark
  hs-source-dirs:      app-benchmark
  main-is:             Main.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -O2 -Wall
  build-depends:       base
                     , containers
                     , criterion
                     , deepseq
                     , graphviz
                     , NfaExperiments
                     , optparse-generic
                     , MonadRandom
                     , random
                     , text
                     , time
                     -- For the Control.Monad.Trans.Except module
                     , transformers >= 0.4
  other-modules:       AutomataOutput
                     , Interpolator
                     , RandomNfa
  default-language:    Haskell2010

test-suite NfaExperiments-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       base >= 4.7 && < 5
                     , hspec
                     , hspec-discover
                     , QuickCheck
                     , NfaExperiments
                     , containers
                     , equivalence
                     , parsec >= 3 && < 4
                     , transformers

  other-modules:       Algorithm.AutomataMergeSpec
                     , Algorithm.DfaEquivalenceSpec
                     , Algorithm.NfaEquivalenceSpec
                     , Algorithm.Regex.DerivationSpec
                     , Compiler.HkntSpec
                     , Compiler.RegexSpec
                     , Data.DfaSpec
                     , Data.EpsilonNfaSpec
                     , Data.EpsilonNfa.InternalSpec
                     , Data.NfaSpec
                     , Data.EquivalenceSpec
                     , Data.CongruenceClosureSpec
                     , HkntSamples
                     , Language.Automata.HkntParserSpec
                     , Language.Automata.HkntParser.InternalSpec
                     , Language.Automata.HkntParser.TokeniserSpec
                     , Language.RegexParserSpec
                     , Language.RegexParser.InternalSpec
                     , Language.RegexParser.TokeniserSpec

  ghc-options:         -threaded -rtsopts -with-rtsopts=-N -Wall
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/koflerdavid/nfa-equivalence-code
